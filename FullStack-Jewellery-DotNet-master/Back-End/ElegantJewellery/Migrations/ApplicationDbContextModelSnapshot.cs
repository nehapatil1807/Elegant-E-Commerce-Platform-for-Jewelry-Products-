// <auto-generated />
using System;
using ElegantJewellery.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElegantJewellery.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ElegantJewellery.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ElegantJewellery.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("ElegantJewellery.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Beautiful collection of rings",
                            Name = "Rings"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Elegant necklaces for all occasions",
                            Name = "Necklaces"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Stunning earrings collection",
                            Name = "Earrings"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Charming bracelets and bangles",
                            Name = "Bracelets"
                        });
                });

            modelBuilder.Entity("ElegantJewellery.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShippingAddressLine1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShippingAddressLine2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShippingCity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShippingFullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShippingPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShippingPincode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShippingState")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ElegantJewellery.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ElegantJewellery.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ImageUrl = "https://cdn.bradojewellery.com/p/540x/1710406122399.jpeg",
                            Name = "Diamond Solitaire Ring",
                            Price = 124499m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ImageUrl = "https://cdn.bradojewellery.com/p/540x/1710404013885.jpeg",
                            Name = "Rose Gold Wedding Band",
                            Price = 66399m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            ImageUrl = "https://cdn.bradojewellery.com/p/540x/1711022791462.jpeg",
                            Name = "Pearl Pendant Necklace",
                            Price = 49799m,
                            Stock = 8
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            ImageUrl = "https://cdn.bradojewellery.com/p/540x/1734852671201.jpeg",
                            Name = "Gold Chain Necklace",
                            Price = 74699m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            ImageUrl = "https://cdn.bradojewellery.com/p/540x/1722072430751.jpeg",
                            Name = "Diamond Stud Earrings",
                            Price = 82999m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            ImageUrl = "https://cdn.bradojewellery.com/p/540x/1719922648757.jpeg",
                            Name = "Sapphire Drop Earrings",
                            Price = 107899m,
                            Stock = 6
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            ImageUrl = "https://cdn.bradojewellery.com/p/540x/1689066649407.jpeg",
                            Name = "Tennis Bracelet",
                            Price = 207499m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            ImageUrl = "https://cdn.bradojewellery.com/p/540x/1691123242398.jpeg",
                            Name = "Charm Bracelet",
                            Price = 33199m,
                            Stock = 20
                        });
                });

            modelBuilder.Entity("ElegantJewellery.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ElegantJewellery.Models.Cart", b =>
                {
                    b.HasOne("ElegantJewellery.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("ElegantJewellery.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElegantJewellery.Models.CartItem", b =>
                {
                    b.HasOne("ElegantJewellery.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElegantJewellery.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ElegantJewellery.Models.Order", b =>
                {
                    b.HasOne("ElegantJewellery.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElegantJewellery.Models.OrderItem", b =>
                {
                    b.HasOne("ElegantJewellery.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElegantJewellery.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ElegantJewellery.Models.Product", b =>
                {
                    b.HasOne("ElegantJewellery.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ElegantJewellery.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("ElegantJewellery.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ElegantJewellery.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ElegantJewellery.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ElegantJewellery.Models.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
